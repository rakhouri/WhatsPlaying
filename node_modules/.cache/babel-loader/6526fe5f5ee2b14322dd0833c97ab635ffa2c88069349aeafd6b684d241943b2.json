{"ast":null,"code":"const clientId = \"909daba4eb0b4c8e8978c71d3cc3685f\"; // Replace with your client ID\nconst code = undefined;\nif (!code) {\n  redirectToAuthCodeFlow(clientId);\n} else {\n  const accessToken = await getAccessToken(clientId, code);\n  const profile = await fetchProfile(accessToken);\n  console.log(profile);\n  populateUI(profile);\n}\nexport async function redirectToAuthCodeFlow(clientId) {\n  const verifier = generateCodeVerifier(128);\n  const challenge = await generateCodeChallenge(verifier);\n  localStorage.setItem(\"verifier\", verifier);\n  const params = new URLSearchParams();\n  params.append(\"client_id\", clientId);\n  params.append(\"response_type\", \"code\");\n  params.append(\"redirect_uri\", \"localhost:3000\");\n  params.append(\"scope\", \"user-read-private user-read-email\");\n  params.append(\"code_challenge_method\", \"S256\");\n  params.append(\"code_challenge\", challenge);\n  document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\n}\nfunction generateCodeVerifier(length) {\n  let text = \"\";\n  let possible = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  for (let i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n  return text;\n}\nasync function generateCodeChallenge(codeVerifier) {\n  const data = new TextEncoder().encode(codeVerifier);\n  const digest = await window.crypto.subtle.digest(\"SHA-256\", data);\n  return btoa(String.fromCharCode.apply(null, [...new Uint8Array(digest)])).replace(/\\+/g, \"-\").replace(/\\//g, \"_\").replace(/=+$/, \"\");\n}\nasync function fetchProfile(token) {\n  const result = await fetch(\"https://api.spotify.com/v1/me\", {\n    method: \"GET\",\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return await result.json();\n}\nfunction populateUI(profile) {\n  // TODO: Update UI with profile data\n}","map":{"version":3,"names":["clientId","code","undefined","redirectToAuthCodeFlow","accessToken","getAccessToken","profile","fetchProfile","console","log","populateUI","verifier","generateCodeVerifier","challenge","generateCodeChallenge","localStorage","setItem","params","URLSearchParams","append","document","location","toString","length","text","possible","i","charAt","Math","floor","random","codeVerifier","data","TextEncoder","encode","digest","window","crypto","subtle","btoa","String","fromCharCode","apply","Uint8Array","replace","token","result","fetch","method","headers","Authorization","json"],"sources":["C:/Users/Michael Rosol/Desktop/hackathon/WhatsPlaying/final/src/pages/Script.js"],"sourcesContent":["const clientId = \"909daba4eb0b4c8e8978c71d3cc3685f\"; // Replace with your client ID\r\nconst code = undefined;\r\n\r\nif (!code) {\r\n  redirectToAuthCodeFlow(clientId);\r\n} else {\r\n  const accessToken = await getAccessToken(clientId, code);\r\n  const profile = await fetchProfile(accessToken);\r\n  console.log(profile);\r\n  populateUI(profile);\r\n}\r\n\r\nexport async function redirectToAuthCodeFlow(clientId) {\r\n  const verifier = generateCodeVerifier(128);\r\n  const challenge = await generateCodeChallenge(verifier);\r\n\r\n  localStorage.setItem(\"verifier\", verifier);\r\n\r\n  const params = new URLSearchParams();\r\n  params.append(\"client_id\", clientId);\r\n  params.append(\"response_type\", \"code\");\r\n  params.append(\"redirect_uri\", \"localhost:3000\");\r\n  params.append(\"scope\", \"user-read-private user-read-email\");\r\n  params.append(\"code_challenge_method\", \"S256\");\r\n  params.append(\"code_challenge\", challenge);\r\n\r\n  document.location = `https://accounts.spotify.com/authorize?${params.toString()}`;\r\n}\r\n\r\nfunction generateCodeVerifier(length) {\r\n  let text = \"\";\r\n  let possible =\r\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\r\n\r\n  for (let i = 0; i < length; i++) {\r\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\r\n  }\r\n  return text;\r\n}\r\n\r\nasync function generateCodeChallenge(codeVerifier) {\r\n  const data = new TextEncoder().encode(codeVerifier);\r\n  const digest = await window.crypto.subtle.digest(\"SHA-256\", data);\r\n  return btoa(String.fromCharCode.apply(null, [...new Uint8Array(digest)]))\r\n    .replace(/\\+/g, \"-\")\r\n    .replace(/\\//g, \"_\")\r\n    .replace(/=+$/, \"\");\r\n}\r\n\r\n\r\nasync function fetchProfile(token) {\r\n  const result = await fetch(\"https://api.spotify.com/v1/me\", {\r\n    method: \"GET\",\r\n    headers: { Authorization: `Bearer ${token}` },\r\n  });\r\n\r\n  return await result.json();\r\n}\r\n\r\n\r\nfunction populateUI(profile) {\r\n  // TODO: Update UI with profile data\r\n}\r\n"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,kCAAkC,CAAC,CAAC;AACrD,MAAMC,IAAI,GAAGC,SAAS;AAEtB,IAAI,CAACD,IAAI,EAAE;EACTE,sBAAsB,CAACH,QAAQ,CAAC;AAClC,CAAC,MAAM;EACL,MAAMI,WAAW,GAAG,MAAMC,cAAc,CAACL,QAAQ,EAAEC,IAAI,CAAC;EACxD,MAAMK,OAAO,GAAG,MAAMC,YAAY,CAACH,WAAW,CAAC;EAC/CI,OAAO,CAACC,GAAG,CAACH,OAAO,CAAC;EACpBI,UAAU,CAACJ,OAAO,CAAC;AACrB;AAEA,OAAO,eAAeH,sBAAsBA,CAACH,QAAQ,EAAE;EACrD,MAAMW,QAAQ,GAAGC,oBAAoB,CAAC,GAAG,CAAC;EAC1C,MAAMC,SAAS,GAAG,MAAMC,qBAAqB,CAACH,QAAQ,CAAC;EAEvDI,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEL,QAAQ,CAAC;EAE1C,MAAMM,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;EACpCD,MAAM,CAACE,MAAM,CAAC,WAAW,EAAEnB,QAAQ,CAAC;EACpCiB,MAAM,CAACE,MAAM,CAAC,eAAe,EAAE,MAAM,CAAC;EACtCF,MAAM,CAACE,MAAM,CAAC,cAAc,EAAE,gBAAgB,CAAC;EAC/CF,MAAM,CAACE,MAAM,CAAC,OAAO,EAAE,mCAAmC,CAAC;EAC3DF,MAAM,CAACE,MAAM,CAAC,uBAAuB,EAAE,MAAM,CAAC;EAC9CF,MAAM,CAACE,MAAM,CAAC,gBAAgB,EAAEN,SAAS,CAAC;EAE1CO,QAAQ,CAACC,QAAQ,GAAI,0CAAyCJ,MAAM,CAACK,QAAQ,CAAC,CAAE,EAAC;AACnF;AAEA,SAASV,oBAAoBA,CAACW,MAAM,EAAE;EACpC,IAAIC,IAAI,GAAG,EAAE;EACb,IAAIC,QAAQ,GACV,gEAAgE;EAElE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,MAAM,EAAEG,CAAC,EAAE,EAAE;IAC/BF,IAAI,IAAIC,QAAQ,CAACE,MAAM,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGL,QAAQ,CAACF,MAAM,CAAC,CAAC;EACtE;EACA,OAAOC,IAAI;AACb;AAEA,eAAeV,qBAAqBA,CAACiB,YAAY,EAAE;EACjD,MAAMC,IAAI,GAAG,IAAIC,WAAW,CAAC,CAAC,CAACC,MAAM,CAACH,YAAY,CAAC;EACnD,MAAMI,MAAM,GAAG,MAAMC,MAAM,CAACC,MAAM,CAACC,MAAM,CAACH,MAAM,CAAC,SAAS,EAAEH,IAAI,CAAC;EACjE,OAAOO,IAAI,CAACC,MAAM,CAACC,YAAY,CAACC,KAAK,CAAC,IAAI,EAAE,CAAC,GAAG,IAAIC,UAAU,CAACR,MAAM,CAAC,CAAC,CAAC,CAAC,CACtES,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CACnBA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CACnBA,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;AACvB;AAGA,eAAerC,YAAYA,CAACsC,KAAK,EAAE;EACjC,MAAMC,MAAM,GAAG,MAAMC,KAAK,CAAC,+BAA+B,EAAE;IAC1DC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MAAEC,aAAa,EAAG,UAASL,KAAM;IAAE;EAC9C,CAAC,CAAC;EAEF,OAAO,MAAMC,MAAM,CAACK,IAAI,CAAC,CAAC;AAC5B;AAGA,SAASzC,UAAUA,CAACJ,OAAO,EAAE;EAC3B;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}